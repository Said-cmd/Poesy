{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/saidhussein/Desktop/Phase-2-Hooks-Code-Challenge-Poesy-102521/code-challenge/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PoemsContainer from \"./PoemsContainer\";\nimport NewPoemForm from \"./NewPoemForm\";\n\nfunction App() {\n  _s();\n\n  const [poems, setPoems] = useState([]);\n  const [togglePoems, setTogglePoems] = useState(true);\n  useEffect(() => {\n    fetch(\"http://localhost:8004/poems\").then(r => r.json()).then(poems => setPoems(poems));\n  }, []);\n\n  function PoemToggle() {\n    setTogglePoems(!togglePoems);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: PoemToggle,\n        children: \"Show/hide new poem form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), togglePoems ? /*#__PURE__*/_jsxDEV(NewPoemForm, {\n        poems: poems,\n        setPoems: setPoems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 24\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PoemsContainer, {\n      poems: poems,\n      setPoems: setPoems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JiqHFxtPYkOBKQmEwpJt4c/rha0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/saidhussein/Desktop/Phase-2-Hooks-Code-Challenge-Poesy-102521/code-challenge/src/components/App.js"],"names":["React","useEffect","useState","PoemsContainer","NewPoemForm","App","poems","setPoems","togglePoems","setTogglePoems","fetch","then","r","json","PoemToggle"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,IAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACSC,CAAD,IAAOA,CAAC,CAACC,IAAF,EADf,EAEGF,IAFH,CAESL,KAAD,IAAWC,QAAQ,CAACD,KAAD,CAF3B;AAGD,GAJQ,EAIP,EAJO,CAAT;;AAMA,WAASQ,UAAT,GAAuB;AACrBL,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEM,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIGN,WAAW,gBAAG,QAAC,WAAD;AAAa,QAAA,KAAK,EAAEF,KAApB;AAA2B,QAAA,QAAQ,EAAEC;AAArC;AAAA;AAAA;AAAA;AAAA,cAAH,GAAuD,IAJrE;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAED,KAAvB;AAA8B,MAAA,QAAQ,EAAEC;AAAxC;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAzBQF,G;;KAAAA,G;AA2BT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PoemsContainer from \"./PoemsContainer\";\nimport NewPoemForm from \"./NewPoemForm\";\n\nfunction App() {\n  const [poems, setPoems] = useState([]);\n  const [togglePoems, setTogglePoems] = useState(true);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8004/poems\")\n      .then((r) => r.json())\n      .then((poems) => setPoems(poems))\n  },[])\n\n  function PoemToggle () {\n    setTogglePoems(!togglePoems)\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"sidebar\">\n        <button onClick={PoemToggle}>\n          Show/hide new poem form\n          </button>\n        {togglePoems ? <NewPoemForm poems={poems} setPoems={setPoems} /> : null}\n      </div>\n      <PoemsContainer poems={poems} setPoems={setPoems} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}